{"version":3,"sources":["serviceWorker.js","redux/error/errors.action.types.js","redux/error/error.reducers.js","redux/forms/forms.action.types.jsx","redux/forms/action.utils.js","redux/forms/forms.reducer.jsx","redux/rootReducer.jsx","redux/store.jsx","redux/error/error.actions.js","components/input/input.styles.jsx","components/input/input.jsx","components/addCategory/addCategory.jsx","redux/forms/forms.actions.jsx","components/AddForm/addForm.jsx","components/forms/forms.jsx","components/categoryForms/categoryForms.component.jsx","components/header/header.jsx","components/table/table.component.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ACTION_TYPES","ADD_ERRORS","DELETE_ERRORS","INTIAL_STATE","errors","Error_Reducer","state","action","type","payload","SUBMIT_FORM","CHANGE_VALUES","ADD_CATEGORY","ADD_FORM","changedValues","value","index","key","prevArray","newArray","INITIAL_STATE","category","forms","FormReducer","console","log","concat","find","elem","toLowerCase","includes","push","persistConfig","storage","whitelist","rootReducer","combineReducers","ErrorReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ERROR_ADDING","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","length","withRouter","connect","dispatch","name","history","useState","newCategory","setCategory","e","target","toUpperCase","Button","onClick","error","email","panCard","addForm","setAddForm","essentials","setEssentials","newOnes","setNew","field","setField","categoryName","map","class","element","selected","Label","variant","style","marginTop","marginBottom","Object","values","filter","onSubmit","changeValues","form","keys","idx","pathname","split","categoryTab","Table","striped","bordered","hover","HeaderComponent","Navbar","bg","Brand","href","to","Nav","Link","TableForm","rows","searching","setSearch","a","persist","useEffect","row","width","FORMS","ERROR_DELETING","Alert","onClose","dismissible","exact","path","render","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fd467a66.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ACTION_TYPES={\n    ADD_ERRORS:'ADD_ERRORS',\n    DELETE_ERRORS:'DELETE_ERRORS'\n}\nexport default ACTION_TYPES","import ACTION_TYPES from './errors.action.types'\n\nconst INTIAL_STATE={\n    errors:[]\n}\nconst Error_Reducer = (state=INTIAL_STATE,action)=>{\n    switch(action.type){\n        case(ACTION_TYPES.ADD_ERRORS): return ({...action.payload})\n        case(ACTION_TYPES.DELETE_ERRORS):\n            return (null)\n        default:\n            return state\n    }\n}\nexport default Error_Reducer","const ACTION_TYPES={\r\n    SUBMIT_FORM:\"SUBMIT_FORM\",\r\n    CHANGE_VALUES:\"CHANGE_VALUES\",\r\n    ADD_CATEGORY:\"ADD_CATEGORY\",\r\n    ADD_FORM:\"ADD_FORM\"\r\n}\r\nexport default ACTION_TYPES","export const changedValues=(value,index,key,prevArray)=>{\r\n    let newArray =[...prevArray]\r\n    newArray[index][key]=value\r\n    return newArray\r\n}","import ACTION_TYPES from './forms.action.types'\r\nimport {changedValues} from './action.utils'\r\n\r\nconst INITIAL_STATE ={\r\n    category:['icon','description','name'],\r\n    forms:[{'user':'username','category':'works'},{'user':'username','category':'works'}]\r\n}\r\nconst FormReducer =(state=INITIAL_STATE, action)=>{\r\n    switch(action.type){\r\n        case(ACTION_TYPES.SUBMIT_FORM):\r\n            return {...state}\r\n        case(ACTION_TYPES.ADD_FORM):\r\n        console.log(state,action.payload)\r\n            return {...state,forms:state.forms.concat(action.payload)}\r\n        case(ACTION_TYPES.ADD_CATEGORY):\r\n            if(!state.category.find(elem=>elem==action.payload))\r\n            {\r\n               const category= state.category.concat(action.payload)\r\n               return({...state,category})\r\n            }\r\n            return state\r\n        case(ACTION_TYPES.CHANGE_VALUES):\r\n            const {value,index,elem}=action.payload\r\n            if(elem.toLowerCase()=='category')\r\n            {\r\n                if(!state.category.includes(value))\r\n                {\r\n                    state.category.push(value);\r\n                }\r\n            }\r\n            return {...state,forms:changedValues(value,index,elem,state.forms)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default FormReducer","import ErrorReducer from './error/error.reducers'\r\nimport FormReducer from './forms/forms.reducer'\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['forms']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    forms:FormReducer,\r\n    errors:ErrorReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { applyMiddleware, createStore } from 'redux';\r\n\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistStore };","import ACTION_TYPES from \"./errors.action.types\";\n\nexport const ERROR_ADDING=(errors)=>({\ntype:ACTION_TYPES.ADD_ERRORS,\npayload:errors\n})\nexport const ERROR_DELETING=()=>({\ntype:ACTION_TYPES.DELETE_ERRORS\n})","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","import {\r\n  FormInputContainer,\r\n  FormInputLabel,\r\n  GroupContainer\r\n} from './input.styles';\r\n\r\nimport React from 'react';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\nexport default FormInput","import React,{useState} from 'react'\r\n\r\nimport {Button} from 'react-bootstrap'\r\nimport {ERROR_ADDING} from '../../redux/error/error.actions'\r\nimport FormInput from '../input/input'\r\nimport {connect} from 'react-redux'\r\nimport {newCategory} from '../../redux/forms/forms.actions'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst AddCategory=({ADD_CATEGORY,ERROR_ADDING,history})=>{\r\n    const [newCategory,setCategory]=useState('')\r\n    const handleSubmit=()=>{\r\n        if(newCategory=='')\r\n        {\r\n            ERROR_ADDING({errors:[{error:'New category cannot be empty'}]})\r\n            return \r\n        }\r\n        ADD_CATEGORY(newCategory)\r\n        setCategory('');\r\n        history.push('/')\r\n    }\r\n    return(<div>\r\n        <FormInput handleChange={(e)=>setCategory(e.target.value)} value={newCategory} label={'Category'.toUpperCase()}/>\r\n        <Button onClick={handleSubmit} >ADD CATEGORY</Button>\r\n    </div>)\r\n}\r\nconst mapDispatchToProps =(dispatch) =>({\r\n    ADD_CATEGORY:(name)=>dispatch(newCategory(name)),\r\n    ERROR_ADDING:(errors)=>dispatch(ERROR_ADDING(errors))\r\n})\r\nexport default withRouter(connect(null, mapDispatchToProps)(AddCategory))","import ACTION_TYPES from './forms.action.types'\r\n\r\nexport const SUBMIT_FORM=(fieldDetails)=>({\r\n    type: ACTION_TYPES.ADD_FIELD,\r\n    payload:fieldDetails\r\n})\r\nexport const changeValues=(props)=>({\r\n    type: ACTION_TYPES.CHANGE_VALUES,\r\n    payload:props\r\n})  \r\nexport const newCategory=(props)=>({\r\n    type: ACTION_TYPES.ADD_CATEGORY,\r\n    payload:props\r\n})  \r\nexport const ADD_FORM=(props)=>({\r\n    type: ACTION_TYPES.ADD_FORM,\r\n    payload:props\r\n})  ","import React,{useState} from 'react'\r\n\r\nimport {ADD_FORM} from '../../redux/forms/forms.actions'\r\nimport {Button} from 'react-bootstrap'\r\nimport {ERROR_ADDING} from '../../redux/error/error.actions'\r\nimport FormInput from '../input/input'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst AddForm=({ERROR_ADDING,category,ADD_FORM,history})=>{\r\n    const [addForm,setAddForm]=useState({name:'',email:'',panCard:''})\r\n    let [essentials,setEssentials] = useState(['name','email','panCard'])\r\n    let [newOnes,setNew] = useState('')\r\n    let [field,setField] = useState(false)\r\n    let [categoryName,setCategory] = useState('name')\r\n    const onSubmit=()=>{\r\n        if(Object.values(addForm).filter(elem=>elem=='').length!=0)\r\n        {\r\n            console.log(Object.values(addForm).map(elem=>elem==''))\r\n            ERROR_ADDING({errors:[{error:'Fields cannot be empty !'}]})\r\n            return\r\n        }\r\n        ADD_FORM({...addForm,category:categoryName})\r\n        history.push('/')\r\n    }\r\n    const fun=()=>{\r\n        if(newOnes!='')\r\n        {\r\n            setAddForm({...addForm,[newOnes]:''})\r\n            setField(!field); \r\n            setEssentials([...essentials,newOnes])\r\n            setNew('')\r\n        }\r\n    }\r\n\r\n    return(<div>\r\n       <form>\r\n       {essentials.map(elem=><FormInput handleChange={(e)=>setAddForm({...addForm,[elem]:e.target.value})} label={elem} value={addForm[elem]}/>)}\r\n       <select onChange={(e)=>setCategory(e.target.value)} class=\"form-control\">\r\n                {category.map((element,index)=><option selected={'name'}>{element}</option>)}\r\n        </select>\r\n       {field? <FormInput value={newOnes} handleChange={(e)=>setNew(e.target.value)} Label=\"New Field\"/>  :null}\r\n       {field?  <Button variant=\"success\" onClick={()=>{newOnes==''?ERROR_ADDING({errors:[{error:'Cannot add field without label !'}]}):fun()}}> ADD NEW FIELD </Button>:null}\r\n       <div style={{marginTop:\"20px\",marginBottom:\"20px\"}}>\r\n       <b> <h3>{field?null:<div><Button onClick={()=>{setField(!field)}} variant='info'>+</Button>ADD FIELD</div>}</h3></b>\r\n       <b> <h3>{!field?null:<div><Button onClick={()=>{setField(!field)}} variant='danger'>-</Button>STOP ADDING</div>}</h3></b>\r\n       </div>\r\n          <Button onClick={()=>onSubmit()} variant=\"primary\">SUBMIT FORM</Button>\r\n    </form>\r\n    </div>)\r\n}\r\nconst mapDispatchToProps=(dispatch) =>({\r\n    ERROR_ADDING:(error)=>dispatch(ERROR_ADDING(error)),\r\n    ADD_FORM:(props)=>dispatch(ADD_FORM(props))\r\n})\r\nconst mapStateToProps =(state)=>({\r\n    category:state.forms.category\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AddForm))","import FormInput from '../input/input'\r\nimport React from 'react'\r\nimport {changeValues} from '../../redux/forms/forms.actions'\r\nimport {connect} from 'react-redux'\r\nimport {useState} from 'react'\r\n\r\nconst form=({form,changeValues,index,forms,category})=>{\r\n        let keys =Object.keys(forms[index])\r\n        let values = Object.values(forms[index])\r\n        return(<div className=\"container\">\r\n           {keys.map((elem,idx)=>{\r\n                    return(elem=='category'?\r\n                    <div>\r\n                       <select onChange={(e)=>changeValues(e.target.value,index,elem)} class=\"form-control\">\r\n                           {category.map((element,index)=><option selected={element==values[idx]}>{category[index]}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    :<FormInput value={values[idx]} handleChange={(e)=>changeValues(e.target.value,index,elem)} label={elem} />)          \r\n        })}\r\n        </div>)\r\n}\r\nconst mapDispatchToProps =(dispatch) =>({\r\n    changeValues:(value,index,elem)=>dispatch(changeValues({value,index,elem}))\r\n})\r\nconst mapStateToProps =(state)=>({\r\n    forms:state.forms.forms,\r\n    category:state.forms.category\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(form)","import React, { Component } from 'react'\r\n\r\nimport Forms from '../forms/forms'\r\nimport InputField from '../input/input'\r\nimport {Table} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport useState from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst CategoryComponent =(props)=>{\r\n    let location=props.location.pathname.split('/')[2]\r\n    let categoryTab =props.forms.forms.map(form=>form.category.toLowerCase()==location.toLowerCase()?form:null)\r\n    console.log(location)\r\n    return(<div>\r\n        {console.log(categoryTab)}\r\n        <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>{`Category - ${location.toUpperCase()}`}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {categoryTab.map((form,index)=>form?<tr>\r\n                                    <h2>{`FORM -`}</h2>\r\n                                    <Forms form={form} index={index}/>\r\n                                    <hr style={{marginTop:'50px',marginBottom:'50px'}}/>\r\n                                </tr>:null)}\r\n        </tbody>\r\n        </Table>\r\n    </div>)\r\n}\r\nconst mapStateToProps =state=>({\r\n    forms: state.forms\r\n})\r\nexport default connect(mapStateToProps)(withRouter(CategoryComponent))","import {Nav, Navbar} from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nconst HeaderComponent =()=>{\r\n    return(<Navbar bg=\"light\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\"><Link to='/'> Navbar</Link></Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\"><Link to='/'> Home</Link></Nav.Link>\r\n      <Nav.Link href=\"#home\"><Link to='/add/category'>Add Category</Link></Nav.Link>\r\n      <Nav.Link href=\"#home\"><Link to='/add/form'> Add Form</Link></Nav.Link>\r\n    </Nav>\r\n    </Navbar>)\r\n}\r\nexport default HeaderComponent","import React,{useEffect, useState} from 'react'\r\n\r\nimport FormInput from '../input/input'\r\nimport {Link} from 'react-router-dom'\r\nimport {Table} from 'react-bootstrap'\r\n\r\nconst TableForm=({rows})=>{\r\n    let [searching,setSearch]= useState('')\r\n    let [category,setCategory]= useState(rows)\r\n    const handleChange=async(e)=>{\r\n        e.persist()\r\n        await setSearch(e.target.value);\r\n    }\r\n    useEffect(()=>{\r\n        setCategory([...rows.map(row=>row.toLowerCase()).filter(row=>row.includes(searching.toLowerCase()))])\r\n    },[searching])\r\n    return(<div>\r\n    <FormInput style={{width:'50%'}} handleChange={handleChange} value={searching} label=\"Search\"/>\r\n    <Table striped variant=\"dark\" bordered hover>\r\n        <thead>\r\n        <tr>\r\n            {'Category'.toUpperCase()}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            {category?category.map(row=>{return(<tr><td><b><Link to={`/category/${row}`}>{row.toUpperCase()}</Link></b></td></tr>)}):null}\r\n        </tbody>\r\n    </Table>\r\n        </div>)\r\n}\r\nexport default TableForm","import './App.css';\n\nimport { ERROR_ADDING, ERROR_DELETING } from './redux/error/error.actions';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\n\nimport AddCategory from './components/addCategory/addCategory'\nimport AddForm from './components/AddForm/addForm'\nimport {Alert} from 'react-bootstrap'\nimport CategoryComponent from './components/categoryForms/categoryForms.component'\nimport HeaderComponent from './components/header/header'\nimport React from 'react';\nimport TableForm from './components/table/table.component'\nimport { connect } from 'react-redux'\n\nfunction App({FORMS,errors,ERROR_DELETING}) {\n  return (\n    <div className=\"container\">\n    <HeaderComponent/>\n    {console.log(errors)}\n    <div>{errors?errors.errors.map((elem,idx)=> (<Alert key={idx} variant='danger' onClose={()=>{ERROR_DELETING()}} dismissible>\n      <b>{elem.error}</b>\n    </Alert>)):null}\n    </div>\n    <Switch>\n      <Route exact path=\"/\" render={() => <div className=\"container\"><TableForm rows={FORMS.category}/></div>}/>\n      \n      <Route path=\"/add/category\" render={() => <AddCategory/>}/>\n      <Route path=\"/add/form\" render={() => <AddForm/>}/>\n      <Route exact path=\"/category/:category\" render={() => <CategoryComponent/>}/>\n    </Switch>\n    </div>\n  );\n}\nconst mapStateToProps =(state)=>({\n  FORMS:state.forms,\n  errors:state.errors\n})\nconst mapDispatchToProps=dispatch=>({\n  ERROR_DELETING:()=>dispatch(ERROR_DELETING())\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { persistor, store } from './redux/store';\n\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>          \n  <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n\n            <App/>\n\n        </BrowserRouter>\n      </PersistGate>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}